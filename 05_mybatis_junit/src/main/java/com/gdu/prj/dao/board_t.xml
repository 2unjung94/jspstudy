<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.prj.dao.board_t"> <!-- 확장자명 빼고 .으로 분리 -->

 <!--
    parameterType
    1. 쿼리문으로 전달되는 파라미터의 타입을 명시한다.
    2. 작성 예시
      1) parameterType="com.gdu.prj.dto.BoardDto"
      2) parameterType="Map"
      3) parameterType="String" - 변수를 하나만 전달하는 경우 생략할 수 있다.
      4) parameterType="int"    - 변수를 하나만 전달하는 경우 생략할 수 있다.
      5) parameterType="double" - 변수를 하나만 전달하는 경우 생략할 수 있다.
  -->
  
  <!--
    parameter 작성 방법
    1. #{}
      1) PreparedStatement 를 이용하여 ? 에 값을 저장하는 JDBC 방식으로 처리한다.
      2) 변수 값을 처리할 때 사용한다.
      2) 객체나 Map 에 저장된 프로퍼티(필드, Key)를 입력한다.
    2. ${}
      1) 문자열 대체는 전달된 값을 따옴표나 이스케이프 없이 그대로 사용한다.
      2) SQL 구문의 메타데이터(테이블 이름, 칼럼 이름, SQL 자체)를 처리할 때 사용한다.
  -->

  <!--
    resultType
    1. SELECT 문의 반환 값의 타입을 명시한다.
    2. INSERT / UPDATE / DELETE 는 resultType 속성을 작성하지 않는다. (resultType="int" 로 미리 정의되어 있다.)
    3. 작성 예시
      1) resultType="com.gdu.prj.dto.BoardDto"
      2) resultType="int"
      3) resultType="double"
  -->

  <!-- id = 메소드이름, parameterType="패키지주소부터클래스명까지" -->
  <!-- mybatis 는 파라미터타입 주소에 있는 dto 에서 title, contents 를 찾음 -->
  <insert id="insertBoard"   
          parameterType="com.gdu.prj.dto.BoardDto"> 
    INSERT INTO BOARD_T (
        BOARD_NO
      , TITLE
      , CONTENTS
      , MODIFIED_AT
      , CREATED_AT
    ) VALUES(
        BOARD_SEQ.NEXTVAL
      , #{title} 
      , #{contents}
      , CURRENT_DATE
      , CURRENT_DATE
    )
  </insert>
 
  <update id="updateBoard"
          parameterType="com.gdu.prj.dto.BoardDto">
    UPDATE BOARD_T
       SET TITLE = #{title}
         , CONTENTS = #{contents}
         , MODIFIED_AT = CURRENT_DATE
     WHERE BOARD_NO = #{board_no}
  </update>
 
  <delete id="deleteBoard">
    DELETE 
      FROM BOARD_T 
     WHERE BOARD_NO = #{board_no}
  </delete>
 
  <!-- parameterType - map 도 가능, (parameterMap 아님) -->
  <!-- resultType - SELECT 결과값을 BoardDto가 받으므로 "com.gdu.prj.dto.BoardDto" -->
  <!-- RN 은 BoardDto 에서 저장할 수 있는 필드가 없으므로 dto에 추가 할 것 -->
  <select id="selectBoardList"
          parameterType="Map" 
          resultType="com.gdu.prj.dto.BoardDto"> 
    SELECT RN, BOARD_NO, TITLE, CONTENTS, MODIFIED_AT, CREATED_AT
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY BOARD_NO ${sort}) AS RN,  BOARD_NO, TITLE, CONTENTS, MODIFIED_AT, CREATED_AT
              FROM BOARD_T)
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <select id="getBoardCount"
          resultType="int">
    SELECT COUNT(*) 
      FROM BOARD_T
  </select>
  
  <select id="selectBoardByNo"
          resultType="com.gdu.prj.dto.BoardDto">
    SELECT BOARD_NO, TITLE, CONTENTS, MODIFIED_AT, CREATED_AT
      FROM BOARD_T
     WHERE BOARD_NO = #{board_no}
  </select>
</mapper>